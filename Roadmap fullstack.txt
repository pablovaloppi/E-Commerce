- Frontend
    # Cosas fundamentales
    - Html
    - Css
    - Algo de javascript
	
	#Framework
	- Angular
	
	#Angular (el nuevo: 2+, estamos usando el 13 pero cualquiera sirve)
	
	DOC: https://angular.io/docs
	
	- Creación de componentes (para vista de una pantalla o como componente)
	- Routing
	- Modulos
	- Directivas
	- Creación de pipes
	- Inyección de dependencias
	- Lazy Loading
	- Form control
	- Angular material para el uso de componentes (es de google, hay muchos componentes para armar pantallas)
	  https://material.angular.io/
	- Manejo de observables (se ejecutan asíncronicamente)
	- rxjs (miralo)
	
- Backend
	Ejemplo: https://code-maze.com/net-core-series/
	
	- C# (Te vas a acostumbrar rápido)
	- WEB API (No MVC, aunque la arquitectura es casi la misma)
	- HTTP: Get, Post, Put, Delete (de acá viene los cruds)
	- Controllers
	- Automapper
	- FluentValidation
	- Separación por capas 
	- Inyección de dependencias
	- Uso de repositorios con Entity Framework
	- JWT Token para autorización

- Base de datos (SQL server o MySQL, usamos SQL server)
    Básico de SQL
	- SELECT
	- INSERT INTO
	- UPDATE
	- DELETE
	- CREATE TABLE
	- ALTER TABLE
	- Relaciones 1 a 1, 1 a muchos, mucho a muchos
	- JOINS